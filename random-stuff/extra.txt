(comment

  (def samples (js->clj (js/JSON.parse (rc/inline "./samples.json"))))

  (println (clojure.string/join "\n" (into [] (map (fn [s] (str "(anmol-unicode " "\"" (s "AnmolLipi") "\" \"" (s "Unicode") "\")")) samples))))
                        

  (defn test-sample [sample source target]
    (let [source-text      (sample source)
          target-text      (sample target)
          source-converted (c/convert {:source-text source-text}
                                      :target-font target
                                      :source-font source)]
      (is (= target-text source-converted)))))